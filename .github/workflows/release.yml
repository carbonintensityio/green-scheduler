name: Release

env:
  # Setup Maven Central portal
  MAVEN_USERNAME: ${{ secrets.MAVEN_USERNAME }}
  MAVEN_PASSWORD: ${{ secrets.MAVEN_PASSWORD }}
  MAVEN_GPG_PASSPHRASE: ${{ secrets.GPG_PASSPHRASE }}
  COMMON_MAVEN_ARGS: "-e -B --activate-profiles release --settings .github/mvn-settings.xml --fail-at-end -Dno-format"

on:
  pull_request:
    types: [ closed ]
    paths:
      - '.github/project.yml'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.event_name == 'pull_request' && github.event.pull_request.merged == true || github.event_name == 'push'

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Retrieve metadata
        uses: radcortez/project-metadata-action@main
        id: metadata
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          metadata-file-path: '.github/project.yml'
          local-file: 'true'

      - name: Configure Git author
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Setup JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Setup GPG signing
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import || true
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          echo "pinentry-mode loopback" >> ~/.gnupg/gpg.conf
          echo "use-agent" >> ~/.gnupg/gpg.conf
          echo RELOADAGENT | gpg-connect-agent
        env:
          GPG_PRIVATE_KEY: ${{ secrets.GPG_PRIVATE_KEY }}

      - name: Build, sign & publish artefact
        run: ./mvnw $COMMON_MAVEN_ARGS --file pom.xml -Drevision=${{ steps.metadata.outputs.current-version }} -Dgpg.keyname=${{ secrets.GPG_KEY_ID }} deploy

      - name: Create GitHub release and upload artefact
        uses: softprops/action-gh-release@v2
        with:
          tag_name: 'v${{ steps.metadata.outputs.current-version }}'
          make_latest: true
          generate_release_notes: 'v${{ steps.metadata.outputs.current-version }}'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}